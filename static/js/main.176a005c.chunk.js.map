{"version":3,"sources":["assets/search.svg","assets/whatsapp.svg","assets sync /^/.//.*/.svg$","assets/pause.svg","assets/play.svg","assets/appLogo.png","utils/common.utils.js","constants.js","utils/api.utils.js","components/Search/index.js","components/Gif/index.js","components/Grid/index.js","components/Header/index.js","components/App/index.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./pause.svg","./play.svg","./search.svg","./whatsapp.svg","webpackContext","req","id","webpackContextResolve","o","e","Error","code","keys","Object","resolve","initialiseDataArray","noOfColumns","currentScreenWidth","window","innerWidth","getNoOfColumns","Array","fill","data","totalHeight","formatGiphyData","dataFromGiphyAPI","arguments","length","undefined","gridData","forEach","gifData","heightArray","columnHeightArray","g","currentColumnIndex","indexOf","Math","min","apply","toConsumableArray","push","moving","images","fixed_width","still","fixed_width_still","key","title","currentColumHeight","Number","height","isScrollBottom","document","body","offsetHeight","innerHeight","scrollY","getSearchAPIPath","searchValue","concat","getTrendingAPIPath","callGiphyAPI","apiPath","count","fetch","then","response","json","catch","err","console","error","Search","state","value","onKeyDown","event","_this","updateValue","onChange","setState","target","props","updateSearchValue","react_default","a","createElement","className","type","this","placeholder","disabled","src","require","alt","onClick","Component","defaultProps","Gif","isPlaying","isPlayingAll","cachedProp","toggleGifPlaying","onShareClick","stopPropagation","_this$props","imageData","cellWidth","iconName","currentImage","imageWidth","GIF_PADDING","imageHeight","width","style","margin","url","href","rel","nextProps","prevState","Grid","getGridColumn","gridItemData","components_Gif","_this2","gridLength","appMargin","getCellWidth","renderGrid","gridColumnData","index","Header","togglePlayingState","gifControlText","children","getTrendingGif","App","apiCallCount","noGIf","apiCallInProgress","componentDidMount","updateGiphyData","addEventListener","onScroll","_callee","_args","regenerator_default","wrap","_context","prev","next","getGiphyData","stop","_this$state","formattedData","componentWillUnmount","removeEventListener","_this$state2","components_Header","components_Search","components_Grid","ReactDOM","render","components_App","getElementById"],"mappings":"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","file":"static/js/main.176a005c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.35fb3dd2.svg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.fe7fa822.svg\";","var map = {\n\t\"./pause.svg\": 24,\n\t\"./play.svg\": 25,\n\t\"./search.svg\": 8,\n\t\"./whatsapp.svg\": 9\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/pause.ca47aee8.svg\";","module.exports = __webpack_public_path__ + \"static/media/play.fd3f2017.svg\";","module.exports = __webpack_public_path__ + \"static/media/appLogo.15c492c6.png\";","import {\n    MIN_WIDTH_DESKTOP, MAX_WIDTH_DESKTOP, SCROLL_OFFSET, APP_MARGIN_HORIZONTAL,\n} from \"../constants\";\n/**\n * getNoOfColumns: returns the no of columns based on the screen viewport width\n */\nexport const getNoOfColumns = () => {\n    const currentScreenWidth = window.innerWidth;\n    let noOfColumns = 2; // Minimum no of columns\n    if (currentScreenWidth > MAX_WIDTH_DESKTOP) {\n        noOfColumns = 6;\n    } else if (currentScreenWidth >= MIN_WIDTH_DESKTOP) {\n        noOfColumns = 4;\n    }\n    return noOfColumns;\n};\n\n/**\n * initialiseDataArray: returns an array with filled initial value\n * to store data and total height of each column\n */\nexport const initialiseDataArray = () => {\n    const noOfColumns = getNoOfColumns();\n    const arr = new Array(noOfColumns).fill(null);\n    return arr.map(() => ({ data: [], totalHeight: 0 }));\n};\n\n/**\n * findIndexOfLowestHeightColumn: returns the index of the column with the lowest height\n */\nexport const findIndexOfLowestHeightColumn = heightArray => heightArray.indexOf(Math.min(...heightArray));\n\n/**\n * formatData: returns formatted data from the api according to column structure\n * defined in 'initialiseDataArray'\n */\nexport const formatGiphyData = (dataFromGiphyAPI = [], initialGridData) => {\n    const gridData = initialGridData;\n    dataFromGiphyAPI.forEach((gifData) => {\n        const columnHeightArray = gridData.map(g => g.totalHeight);\n        const currentColumnIndex = findIndexOfLowestHeightColumn(columnHeightArray);\n        gridData[currentColumnIndex].data.push({\n            moving: gifData.images.fixed_width,\n            still: gifData.images.fixed_width_still,\n            key: gifData.id,\n            title: gifData.title,\n        });\n        const currentColumHeight = gridData[currentColumnIndex].totalHeight;\n        gridData[currentColumnIndex].totalHeight = currentColumHeight + Number(gifData.images.fixed_width.height);\n    });\n    return gridData;\n};\n\nexport const isScrollBottom = () => {\n    const height = document.body.offsetHeight;\n    return (window.innerHeight + window.scrollY) >= (height - SCROLL_OFFSET);\n};\nexport const getCellWidth = (gridLength) => {\n    const appMargin = gridLength > 2 ? (2 * APP_MARGIN_HORIZONTAL) : 20;\n    return ((window.innerWidth - appMargin) / gridLength);\n};\n","export const APIKEY = \"lmdFUQVnyLK4jA2jRvnLKjqUXfE0mY6G\";\nexport const GIF_LIMIT = 20;\nexport const BASE_URL = \"https://api.giphy.com/v1/gifs/\";\nexport const MIN_WIDTH_DESKTOP = 768;\nexport const MAX_WIDTH_DESKTOP = 1600;\nexport const SCROLL_OFFSET = 200;\nexport const GIF_PADDING = 10;\nexport const SEARCH_PATH = \"search?q=\";\nexport const TRENDING_PATH = \"trending\";\nexport const APP_MARGIN_HORIZONTAL = 60;\nexport const WHATSAPP_SHARE_BASE_URL = \"https://wa.me/?text=\";\n","import { APIKEY, GIF_LIMIT, BASE_URL } from \"../constants\";\n\nexport const getSearchAPIPath = searchValue => `search?q=${searchValue}&`;\nexport const getTrendingAPIPath = () => \"trending?\";\n\nexport const callGiphyAPI = (apiPath, count = 0) => \n    fetch(`${BASE_URL}${apiPath}api_key=${APIKEY}&limit=${GIF_LIMIT}&offset=${(count * GIF_LIMIT)}`)\n        .then(response => response.json())\n        .then(response => response)\n        .catch(err => console.error(err));\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Search.css\";\n\nclass Search extends Component {\n    state = {\n        value: \"\",\n    }\n\n    onKeyDown = event => event.key === \"Enter\" && this.updateValue();\n\n    onChange = event => this.setState({ value: event.target.value });\n\n    updateValue = () => this.props.updateSearchValue(this.state.value);\n\n    render() {\n        return (\n            <div className=\"searchContainer\">\n                <input\n                    type=\"text\"\n                    onKeyDown={this.onKeyDown}\n                    onChange={this.onChange}\n                    placeholder=\"Search\"\n                    className=\"searchInput\"\n                    disabled={this.props.disabled}\n                />\n                <img \n                    className=\"searchIcon\" src={require(\"../../assets/search.svg\")} \n                    alt=\"search\" onClick={this.updateValue} \n                />\n            </div>\n        );\n    }\n}\n\nSearch.defaultProps = {\n    updateSearchValue: () => {},\n};\n\nSearch.propTypes = {\n    updateSearchValue: PropTypes.func,\n};\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { GIF_PADDING, WHATSAPP_SHARE_BASE_URL } from \"../../constants\";\nimport \"./Gif.css\";\n\nclass Gif extends Component {\n   state = {\n       isPlaying: this.props.isPlayingAll,\n       cachedProp: this.props.isPlayingAll,\n   }\n\n   static getDerivedStateFromProps(nextProps, prevState) {\n       if (nextProps.isPlayingAll !== prevState.cachedProp) {\n           return { isPlaying: nextProps.isPlayingAll, cachedProp: nextProps.isPlayingAll };\n       }\n       return null;\n   }\n\n   toggleGifPlaying = () => this.setState({ isPlaying: !this.state.isPlaying });\n\n   onShareClick = event => event.stopPropagation();\n\n   render() {\n       const { isPlaying } = this.state;\n       const { imageData, title, cellWidth } = this.props;\n       const iconName = isPlaying ? \"pause\" : \"play\";\n       const currentImage = isPlaying ? imageData.moving : imageData.still;\n       const imageWidth = cellWidth - (GIF_PADDING * 2);\n       const imageHeight = (currentImage.height / currentImage.width) * cellWidth;\n       return (\n           <div className=\"imageContainer\" onClick={this.toggleGifPlaying} style={{ margin: `${GIF_PADDING}px` }}>\n               <img className=\"imageControl\" src={require(`../../assets/${iconName}.svg`)} alt=\"play pause button\" />\n               <img className=\"gifImage\" src={currentImage.url} width={imageWidth} height={imageHeight} alt={title} />\n               <a\n                   className=\"share\"\n                   href={`${WHATSAPP_SHARE_BASE_URL}${imageData.moving.url}`}\n                   onClick={this.onShareClick}\n                   target=\"_blank\"\n                   rel=\"noopener noreferrer\"\n               >\n                   <img className=\"whatsAppIcon\" src={require(\"../../assets/whatsapp.svg\")} alt=\"share on whatsapp\" />\n               </a>\n           </div>\n       );\n   }\n}\n\nGif.defaultProps = {\n    imageData: {},\n    title: \"\",\n    cellWidth: 10,\n    isPlayingAll: false,\n};\n\nGif.propTypes = {\n    imageData: PropTypes.object,\n    title: PropTypes.string,\n    cellWidth: PropTypes.number,\n    isPlayingAll: PropTypes.bool,\n};\n\nexport default Gif;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { getCellWidth } from \"../../utils/common.utils\";\nimport Gif from \"../Gif\";\nimport \"./Grid.css\";\n\nclass Grid extends Component {\n    getGridColumn = (gridData, cellWidth) => gridData.map(gridItemData => (\n        <Gif\n            imageData={gridItemData}\n            key={gridItemData.key}\n            cellWidth={cellWidth}\n            isPlayingAll={this.props.isPlayingAll}\n        />\n    ));\n\n    render() {\n        const cellWidth = getCellWidth(this.props.gridData.length);\n        const renderGrid = this.props.gridData.map((gridColumnData, index) => (\n            <div key={index}>{this.getGridColumn(gridColumnData.data, cellWidth)}</div>));\n        return (\n            <div className=\"gridContainer\">\n                {renderGrid}\n            </div>\n        );\n    }\n}\n\nGrid.defaultProps = {\n    gridData: [],\n    isPlayingAll: false,\n};\n\nGrid.propTypes = {\n    gridData: PropTypes.array,\n    isPlayingAll: PropTypes.bool,\n};\n\nexport default Grid;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Header.css\";\n\nconst Header = (props) => {\n    const { isPlayingAll, togglePlayingState } = props;\n    const gifControlText = isPlayingAll ? \"Pause All\" : \"Play All\";\n    return (\n        <div className=\"headerContainer\">\n            <div className=\"logoAndSearchContainer\">\n                <img src={require(\"../../assets/appLogo.png\")} className=\"appLogo\" alt=\"app logo\" />\n                {props.children}\n            </div>\n            <div className=\"controlContainer\">\n                <div onClick={() => props.getTrendingGif()} className=\"controlButton\">Trending</div>\n                <div onClick={togglePlayingState} className=\"controlButton\">{gifControlText}</div>\n            </div>\n        </div>\n    );\n};\n\nHeader.defaultProps = {\n    isPlayingAll: false,\n    togglePlayingState: () => {},\n};\n\nHeader.propTypes = {\n    isPlayingAll: PropTypes.bool,\n    togglePlayingState: PropTypes.func,\n};\n\nexport default Header;\n","import React, { Component } from \"react\";\nimport { formatGiphyData, initialiseDataArray, isScrollBottom } from \"../../utils/common.utils\";\nimport { callGiphyAPI, getSearchAPIPath, getTrendingAPIPath } from \"../../utils/api.utils\";\nimport Search from \"../Search\";\nimport Grid from \"../Grid\";\nimport Header from \"../Header\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n      searchValue: \"\",\n      apiCallCount: 0,\n      gridData: [],\n      isPlayingAll: false,\n      noGIf: false,\n      apiCallInProgress: false,\n  }\n\n  componentDidMount = () => {\n      this.updateGiphyData();\n      window.addEventListener(\"scroll\", this.onScroll, false);\n  }\n\n  updateGiphyData = async (searchValue = \"\") => {\n      await this.setState({ searchValue, apiCallCount: 0, gridData: initialiseDataArray() });\n      await this.getGiphyData();\n  }\n\n  onScroll = () => isScrollBottom() && this.getGiphyData();\n\n  getGiphyData = () => {\n      const {\n          apiCallCount, gridData, searchValue, apiCallInProgress,\n      } = this.state;\n      if (!apiCallInProgress) {\n        this.setState({apiCallInProgress: true});\n          const apiPath = searchValue ? getSearchAPIPath(searchValue) : getTrendingAPIPath();\n          callGiphyAPI(apiPath, apiCallCount)\n              .then((response) => {\n                  const noGIf = !response.data.length && !apiCallCount;\n                  const formattedData = formatGiphyData(response.data, gridData);\n                  this.setState({\n                      gridData: formattedData, apiCallCount: apiCallCount + 1, apiCallInProgress: false, noGIf,\n                  });\n              }).catch(() => this.setState({ apiCallInProgress: false, noGIf: true }));\n      }\n  }\n\n  togglePlayingState = () => this.setState({ isPlayingAll: !this.state.isPlayingAll });\n\n  componentWillUnmount = () => {\n      window.removeEventListener(\"scroll\", this.onScroll, false);\n  }\n\n  render() {\n      const { isPlayingAll, noGIf, gridData } = this.state;\n      return (\n          <div className=\"appContainer\">\n              <Header \n                  togglePlayingState={this.togglePlayingState} \n                  isPlayingAll={isPlayingAll} getTrendingGif={this.updateGiphyData}\n              >\n                  <Search updateSearchValue={this.updateGiphyData} />\n              </Header>\n              { noGIf ? <div className=\"noGifMessage\"> No gif found! :) </div>\n                  : <Grid gridData={gridData} isPlayingAll={isPlayingAll} />\n              }\n          </div>\n      );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}